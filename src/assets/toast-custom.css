:root {
  /* Your existing theme variables */
  --bg-light: #ffffff;
  --bg-dark: #1a1a1a;
  --text-color-light: #213547;
  --text-color-dark: #d1d5db;
  --green-accent-light: #15803d;
  --green-accent-dark: #7bf1a8;
  --border-color-light: #90a1b9;
  --border-color-dark: #45556c;
  --vt-color-progress-bar: #64ad7cc4;

  /* These variables will set the default background and text color for toasts */
  --vt-toast-background: var(--bg-light);
  --vt-toast-text-color: var(--text-color-light);

  /* You can remove the --vt-color-info, --vt-color-success, etc. assignments from here
     as we're going to directly target the classes below. */
}

/* Dark mode adjustments for toast CSS variables */
@media (prefers-color-scheme: dark) {
  :root {
    --vt-toast-background: var(--bg-dark);
    --vt-toast-text-color: var(--text-color-dark);
  }
}

/*
  Override core toast styles for rounded corners and 1px border.
  The background color will be set by the type-specific rules below.
*/
.Vue-Toastification__toast {
  border-radius: 10px !important;
  box-shadow: none !important;
  /*
    The border color needs to be set here as it's not a type-specific style.
    It will switch automatically with the media query on the .Vue-Toastification__toast
    rule below.
  */
  border: 1px solid var(--border-color-light) !important;
}

/* Dark mode specific border for the toast element */
@media (prefers-color-scheme: dark) {
  .Vue-Toastification__toast {
    border: 1px solid var(--border-color-dark) !important;
  }
}

/* Apply your custom background to ALL toast types (light mode) */
.Vue-Toastification__toast--info,
.Vue-Toastification__toast--success,
.Vue-Toastification__toast--warning,
.Vue-Toastification__toast--error {
  background-color: var(--vt-toast-background) !important;
  color: var(
    --vt-toast-text-color
  ) !important; /* Ensure text color is also correct */
}

/* Apply your custom background to ALL toast types (dark mode) */
@media (prefers-color-scheme: dark) {
  .Vue-Toastification__toast--info,
  .Vue-Toastification__toast--success,
  .Vue-Toastification__toast--warning,
  .Vue-Toastification__toast--error {
    background-color: var(--vt-toast-background) !important;
    color: var(--vt-toast-text-color) !important;
  }
}

/* Progress bar color */
.Vue-Toastification__progress-bar {
  background-color: var(--vt-color-progress-bar) !important;
}

/* Close button color (ensure visibility on your background) */
.Vue-Toastification__close-button {
  color: var(--vt-toast-text-color) !important;
}

/* Icon Color (Green) */
.Vue-Toastification__icon,
.custom-icon-wrapper .fa-rocket, /* For Font Awesome */
.custom-svg-icon-wrapper svg /* For SVG */ {
  color: var(--green-accent-light) !important;
}

/* Dark mode icon color */
@media (prefers-color-scheme: dark) {
  .Vue-Toastification__icon,
  .custom-icon-wrapper .fa-rocket,
  .custom-svg-icon-wrapper svg {
    color: var(--green-accent-dark) !important;
  }
}

/* Adjust size for default icons if needed */
.Vue-Toastification__icon {
  font-size: 20px;
}

/* Custom icon wrapper styles */
.custom-icon-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  margin-right: 8px;
}

.custom-svg-icon-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  margin-right: 8px;
}
.custom-svg-icon-wrapper svg {
  width: 100%;
  height: 100%;
}
